<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_selection_arrow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>action_menu = 1;
option = 0;
roll = random_range (1, 100);
global.crit = false;
item_option = 0;
item_menu = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Arrow Movement
if keyboard_check_pressed(vk_down) &amp;&amp; action_menu = 1{
    option += 1
    
    if option &gt; 3{
        option = 0;
    }
}

if keyboard_check_pressed(vk_up) &amp;&amp; action_menu = 1{
    option -= 1
    
    if option &lt; 0{
        option = 3;
    } 
}


//Attacks
if option = 0 &amp;&amp; action_menu = 1 {
    x = eagle_attacks.x+125
    y = eagle_attacks.y+20
    
    if keyboard_check_pressed(vk_enter) &amp;&amp; (global.ap &gt;=1){
        global.ap -= 1;
        global.player_health += random_range (20, 30);
        global.player_turn = false;
        instance_destroy();
        with (battle_items){
            instance_destroy();
        }
    }
}



if option = 1 &amp;&amp; action_menu = 1{
    x = eagle_attacks.x+125
    y = eagle_attacks.y+50
    
        if keyboard_check_pressed(vk_enter){
            if (roll &gt; 90){
                global.enemy_health -= random_range (45, 50)
                global.crit = true;
                global.player_turn = false;
                instance_destroy();
            }
        
        else global.enemy_health -= random_range(15, 20);
        global.player_turn = false;
        instance_destroy();
         
         with (battle_items){
            instance_destroy();
        }
    }
}

if option = 2 &amp;&amp; action_menu = 1 {
    x = eagle_attacks.x+125
    y = eagle_attacks.y+75
    
        if keyboard_check_pressed(vk_enter) &amp;&amp; (global.ap &gt;=2){
            global.ap -= 2;
            if (roll &gt; 90){
                global.enemy_health -= random_range (90, 100)
                global.crit = true;
                global.player_turn = false;
                instance_destroy();
                
                with (battle_items){
                    instance_destroy();
        }
                
            }
        
        else global.enemy_health -= random_range (60, 65);
        global.player_turn = false;
        instance_destroy();
    }
}

//Open Item Menu
if option = 3 &amp;&amp; action_menu = 1 {
    x = eagle_attacks.x+125
    y = eagle_attacks.y+105
        if keyboard_check_pressed(vk_enter) || keyboard_check_pressed (vk_right){
            instance_create(eagle_attacks.x+138, eagle_attacks.y+61, battle_items)
            item_menu = 1;
            action_menu = 0;
        }
}


//Item Menu Select
if item_menu = 1 &amp;&amp; keyboard_check_pressed (vk_down){
    item_option +=1
    
    if item_option &gt;1 {
        item_option = 0
    }
}

if item_menu = 1 &amp;&amp; keyboard_check_pressed (vk_up){
    item_option -=1
    
    if item_option &lt;0 {
        item_option = 1
    }
}


if item_option = 0 &amp;&amp; item_menu = 1  {
    x = battle_items.x + 165;
    y = battle_items.y + 18;
        
        if keyboard_check_pressed (vk_enter){
            global.player_health += 45
        }    
    
        if keyboard_check_pressed (vk_left) || keyboard_check_pressed (vk_escape){
            item_menu = 0;
            action_menu = 1;
        }
}

if item_option = 1 &amp;&amp; item_menu = 1 {
    x = battle_items.x + 165;
    y = battle_items.y + 50
    
    if keyboard_check_pressed (vk_enter){
    global.ap += 3
        }    
    
    if keyboard_check_pressed (vk_left) || keyboard_check_pressed (vk_escape){
        item_menu = 0;
        action_menu = 1;
        }
}

//Item Menu Destroy
if item_menu = 0{
    with battle_items{
        instance_destroy()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
