<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_selection_arrow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (Battle_Messages){
    instance_destroy();
}

action_menu = 1;
option = 0;
roll = irandom_range (1, 100);
global.crit = false;
item_option = 0;
item_menu = 0;
global.miss = false;
miss_chance = irandom_range (1, 100);
global.player_heal = false;
global.player_attack = false;
global.use_ap_potion = false;
global.use_hp_potion = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Arrow Movement
if keyboard_check_pressed(vk_down) &amp;&amp; action_menu = 1{
    option += 1
    
    if option &gt; 3{
        option = 0;
    }
}

if keyboard_check_pressed(vk_up) &amp;&amp; action_menu = 1{
    option -= 1
    
    if option &lt; 0{
        option = 3;
    }
}


//Eagle Attacks
if instance_exists(battle_eagle){

//Claw
if option == 0 &amp;&amp; action_menu == 1 {
    x = eagle_attacks.x - 15
    y = eagle_attacks.y+65
    image_xscale = 1;
    
        //crit chance
            if keyboard_check_released(vk_enter) || keyboard_check_released(vk_space){            
                if (roll &gt;= 85){
                if !instance_exists(battle_boss){
                    global.enemy_combat_text = irandom_range (45, 50);
                }
                if instance_exists(battle_boss){
                    global.enemy_combat_text = irandom_range (25, 30);
                }
                //global.enemy_health -= global.enemy_combat_text;
                global.player_attack = true;
                global.crit = true;
                instance_create(1000, 450, eagle_claw)
                //instance_create(0,0,Battle_Messages);
                global.player_turn = false;
                instance_destroy();
            }
    //miss chance
            if miss_chance &gt;= 90 &amp;&amp; roll &lt; 85 {
            global.miss = true;
            instance_create(0,0, Battle_Messages);
            global.player_turn = false;
            instance_destroy();            
        }
        
        else if miss_chance &lt; 90 &amp;&amp; roll &lt; 85{
        
        if !instance_exists(battle_boss){
            global.enemy_combat_text = irandom_range(28, 35);
        }
        if instance_exists(battle_boss){
            global.enemy_combat_text = irandom_range(10, 15);
        }
        //global.enemy_health -= global.enemy_combat_text;
        global.player_attack = true;
        instance_create(1000, 450, eagle_claw);
        //instance_create(0,0,Battle_Messages);
        global.player_turn = false;
        instance_destroy();
         
         with (battle_items){
            instance_destroy();
            }
        }
    }    
}



//CaCaw!
if option = 1 &amp;&amp; action_menu = 1{
    x = eagle_attacks.x-15
    y = eagle_attacks.y+105
    image_xscale = 1;
    if keyboard_check_released(vk_enter) &amp;&amp; (global.ap &gt;=1) || keyboard_check_released(vk_space) &amp;&amp; (global.ap &gt;=1){
        global.ap -= 1;
        global.player_combat_text = irandom_range (50, 60);
        //global.player_health += global.player_combat_text;
        global.enemy_heal = false;
        global.player_heal = true;
        instance_create(300, 400, obj_heal);
        //instance_create(0,0,Battle_Messages);
        global.player_turn = false;
        instance_destroy();
        with (battle_items){
            instance_destroy();
        }
    }
}


//Whirlwind
if option = 2 &amp;&amp; action_menu = 1 {
    x = eagle_attacks.x-15
    y = eagle_attacks.y+145
    image_xscale = 1;
    
        if keyboard_check_released(vk_enter) &amp;&amp; (global.ap &gt;=2) || keyboard_check_released(vk_space) &amp;&amp; (global.ap &gt;=2){
            global.ap -= 2;
            if (roll &gt;= 90){
            if !instance_exists(battle_boss){
                global.enemy_combat_text = irandom_range (90, 95)
                }
                if instance_exists(battle_boss){
                    global.enemy_combat_text = irandom_range (45,50);
                }
                //global.enemy_health -= global.enemy_combat_text;
                global.crit = true;
                global.player_attack = true;
                instance_create(1000,450,eagle_whirl)
                //instance_create(0,0,Battle_Messages);
                global.player_turn = false;
                instance_destroy();
                
                with (battle_items){
                    instance_destroy();
        }
                
            }
        
        else if roll &lt; 90{
        if !instance_exists(battle_boss){
            global.enemy_combat_text = irandom_range (40, 45);
        }
        if instance_exists(battle_boss){
            global.enemy_combat_text = irandom_range (20, 25);
        }
        //global.enemy_health -= global.enemy_combat_text;
        global.player_attack = true;
        instance_create(1000,450,eagle_whirl)        
        //instance_create(0,0, Battle_Messages);
        global.player_turn = false;
        instance_destroy();
        }
    }
}

//Open Item Menu
if option = 3 &amp;&amp; action_menu = 1 {
    x = eagle_attacks.x-15
    y = eagle_attacks.y+185
    image_xscale = 1;
        if keyboard_check_released(vk_enter) || keyboard_check_pressed (vk_right) || keyboard_check_released(vk_space){
            instance_create(eagle_attacks.x+115, eagle_attacks.y+170, battle_items)
            action_menu = 0;
            item_menu = 1;
        }
}
}

//Deer Attacks
if instance_exists(battle_deer){

if option = 0 &amp;&amp; action_menu = 1{
    x = deer_attacks.x-15
    y = deer_attacks.y+65
    image_xscale = 1;
    //Bite
    //Crit chance
        if keyboard_check_released(vk_enter) || keyboard_check_released(vk_space){
            if (roll &gt;= 85){
                if !instance_exists(battle_boss){
                    global.enemy_combat_text = irandom_range (45, 50)
                }
                if instance_exists(battle_boss){
                    global.enemy_combat_text = irandom_range (25, 30)
                }
                //global.enemy_health -= global.enemy_combat_text;
                global.player_attack = true;
                global.crit = true;
                instance_create(1000, 450, deer_bite);
                //instance_create(0,0,Battle_Messages);
                global.player_turn = false;
                instance_destroy();
            }
    //Miss chance
        else if miss_chance &gt;= 90 &amp;&amp; roll &lt; 85 {
            global.player_turn = false;
            global.miss = true;
            instance_create(0,0, Battle_Messages);
            instance_destroy();            
        }
        //Normal Bite
        else if miss_chance &lt;90 &amp;&amp; roll &lt; 85{
        if !instance_exists(battle_boss){
            global.enemy_combat_text = irandom_range(28, 33);
        }
        if instance_exists(battle_boss){
            global.enemy_combat_text = irandom_range(10, 15);
        }
        //global.enemy_health -= global.enemy_combat_text;
        global.player_attack = true;
        instance_create(1000, 450, deer_bite);
        //instance_create(0,0,Battle_Messages);
        global.player_turn = false;
        instance_destroy();
         
         
         with (battle_items){
         instance_destroy();
         }
       }
    }
}

//Deer Camo
if option = 1 &amp;&amp; action_menu = 1 {
    x = deer_attacks.x-15
    y = deer_attacks.y+105
    image_xscale = 1;
    
    if keyboard_check_released(vk_enter) || keyboard_check_released(vk_space){
        global.player_combat_text = 2;
        //global.ap += global.player_combat_text;
        global.use_ap_potion = true;
        instance_create(200, 450, deer_camo);
        instance_create(300, 420, deer_camo);
        instance_create(100, 465, deer_camo);
        instance_create(155, 440, deer_camo);  
        instance_create(200, 400, ap_up);
        //instance_create(0,0,Battle_Messages);
        global.player_turn = false;
        instance_destroy();
        with (battle_items){
            instance_destroy();
        }
    }
}

//Deer Megahorn
if option = 2 &amp;&amp; action_menu = 1 {
    x = deer_attacks.x-15
    y = deer_attacks.y+145
    image_xscale = 1;
    
        if keyboard_check_released(vk_enter) &amp;&amp; (global.ap &gt;=2) || keyboard_check_released(vk_space) &amp;&amp; (global.ap &gt;=2){
            global.ap -= 2;
            if (roll &gt;= 90){
                if !instance_exists(battle_boss){
                    global.enemy_combat_text = irandom_range (90, 95);
                }
                if instance_exists(battle_boss){
                    global.enemy_combat_text = irandom_range (45, 50);
                }
                //global.enemy_health -= global.enemy_combat_text;
                global.crit = true;
                global.player_attack = true;
                instance_create(800,370,deer_megahorn);
                //instance_create(0,0,Battle_Messages);                
                global.player_turn = false;
                instance_destroy();
                
                with (battle_items){
                    instance_destroy();
                }
                
            }
        
            else if roll &lt;90 {
        if !instance_exists(battle_boss){
        global.enemy_combat_text = irandom_range (65, 70);
        }
        if instance_exists(battle_boss){
        global.enemy_combat_text = irandom_range (20, 25);
        }
        //20, 25
        //global.enemy_health -= global.enemy_combat_text;
        global.player_attack = true;
        instance_create (800, 370, deer_megahorn);
        //instance_create(0,0,Battle_Messages);
        global.player_turn = false;
        instance_destroy();
        }
    }
}

//Open Item Menu
if option = 3 &amp;&amp; action_menu = 1 {
    x = deer_attacks.x-15
    y = deer_attacks.y+185
    image_xscale = 1;
    
        if keyboard_check_released(vk_enter) || keyboard_check_pressed (vk_right) || keyboard_check_released(vk_space){
            instance_create(deer_attacks.x+115, deer_attacks.y+170, battle_items)
            action_menu = 0;
            item_menu = 1;
        }
}
}

//Bass Attacks
if instance_exists(battle_bass){

if option = 0 &amp;&amp; action_menu = 1{
    x = bass_attacks.x-15
    y = bass_attacks.y+65
    image_xscale = 1;
    
    //crit chance
        if keyboard_check_released(vk_enter) || keyboard_check_released(vk_space){
            if (roll &gt;= 85){
                if !instance_exists(battle_boss){
                    global.enemy_combat_text = irandom_range (45, 50);
                }
                if instance_exists(battle_boss){
                    global.enemy_combat_text = irandom_range (25, 30);
                }
                
                global.enemy_health -= global.enemy_combat_text;
                global.player_attack = true;
                global.crit = true;
                instance_create(1000, 300, bass_splash);
                instance_create(0,0,Battle_Messages);
                global.player_turn = false;
                instance_destroy();
            }
    //Miss chance
        else if miss_chance &gt;= 90 &amp;&amp; roll &lt; 85 {
            global.player_turn = false;
            global.miss = true;
            instance_create(0,0, Battle_Messages);
            instance_destroy();            
        }
        //Normal Splash
        else if miss_chance &lt;90 &amp;&amp; roll &lt; 85{
        if !instance_exists(battle_boss){
            global.enemy_combat_text = irandom_range (28, 33);
        }
        if instance_exists(battle_boss){
            global.enemy_combat_text = irandom_range (10, 15);
        }
        global.enemy_health -= global.enemy_combat_text;
        global.player_attack = true;
        instance_create(1050,300,bass_splash);
        instance_create(0,0,Battle_Messages);
        global.player_turn = false;
        instance_destroy();
         
         with (battle_items){
            instance_destroy();
        }
    }
}
}

//Bass Bubble
if option = 1 &amp;&amp; action_menu = 1 {
    x = bass_attacks.x-15
    y = bass_attacks.y+105
    image_xscale = 1;
    
    if keyboard_check_released(vk_enter) &amp;&amp; (global.ap &gt;=1) || keyboard_check_released(vk_space) &amp;&amp; (global.ap &gt;=1){
        global.ap += 1;
        global.player_combat_text = irandom_range (10, 18)
        global.player_health += global.player_combat_text;
        global.enemy_heal = false;
        global.player_heal = true;
        instance_create(300,400,bass_bubble);
        instance_create(0,0,Battle_Messages);
        global.player_turn = false;
        instance_destroy();
        with (battle_items){
            instance_destroy();
        }
    }
}

//Bass Whirlpool
if option = 2 &amp;&amp; action_menu = 1 {
    x = bass_attacks.x-15
    y = bass_attacks.y+145
    image_xscale = 1;
    
        if keyboard_check_released(vk_enter) &amp;&amp; (global.ap &gt;=2) || keyboard_check_released(vk_space) &amp;&amp; (global.ap &gt;=2){
            global.ap -= 2;
            if (roll &gt; 90){
                if !instance_exists(battle_boss){
                    global.enemy_combat_text = irandom_range (90, 95);
                }
                if instance_exists(battle_boss){
                    global.enemy_combat_text = irandom_range (45, 50);
                }
                
                //global.enemy_health -= global.enemy_combat_text;
                global.crit = true;
                global.player_attack = true;
                instance_create(1050, 370, bass_whirlpool);
                //instance_create(0,0,Battle_Messages)
                global.player_turn = false;
                instance_destroy();
                
                with (battle_items){
                    instance_destroy();
        }
                
            }
        
        else if roll &lt;90{
        if !instance_exists(battle_boss){
            global.enemy_combat_text = irandom_range (65, 70);
        }
        if instance_exists(battle_boss){
            global.enemy_combat_text = irandom_range (20, 25);
        }
        //global.enemy_health -= global.enemy_combat_text;
        global.player_attack = true;
        instance_create (1050, 370, bass_whirlpool);
        //instance_create(0,0,Battle_Messages);
        global.player_turn = false;
        instance_destroy();
        }
    }
}

//Open Item Menu
if option = 3 &amp;&amp; action_menu = 1 {
    x = bass_attacks.x-15
    y = bass_attacks.y+185
    image_xscale = 1;
    
        if keyboard_check_released(vk_enter) || keyboard_check_pressed (vk_right) || keyboard_check_released(vk_space){
            instance_create(bass_attacks.x+115, bass_attacks.y+170, battle_items)
            action_menu = 0;
            item_menu = 1;
        }
}
}






//Item Menu Up/Down
if item_menu = 1 &amp;&amp; keyboard_check_pressed (vk_down){
    item_option +=1
    
    if item_option &gt;1 {
        item_option = 0
    }
}

if item_menu = 1 &amp;&amp; keyboard_check_pressed (vk_up){
    item_option -=1
    
    if item_option &lt;0 {
        item_option = 1
    }
}

//Item Menu Select
//HP Potion
if item_option = 0 &amp;&amp; item_menu = 1  {
    x = battle_items.x + 260;
    y = battle_items.y + 25;
    image_xscale = -1
        
            if keyboard_check_pressed (vk_enter) &amp;&amp; global.hp_potion &gt; 0 || keyboard_check_pressed(vk_space) &amp;&amp; (global.hp_potion &gt; 0){
        global.player_combat_text = 65;
        //global.player_health += global.player_combat_text;
        global.enemy_heal = false;
        global.player_heal = true;
        global.hp_potion -=1;
        global.use_hp_potion = true;
        instance_create(300, 400, obj_heal);
        //instance_create(0,0,Battle_Messages);
            item_menu = 0;
            global.player_turn = false;
            instance_destroy();
        }    
        if keyboard_check_pressed (vk_left) || keyboard_check_pressed (vk_escape){
            item_menu = 0;
            action_menu = 1;
        }
}

//AP Potion
if item_option = 1 &amp;&amp; item_menu = 1 {
    x = battle_items.x + 270;
    y = battle_items.y + 65
    image_xscale = -1
    
    if keyboard_check_pressed (vk_enter) &amp;&amp; global.ap_potion &gt; 0 || keyboard_check_pressed (vk_space) &amp;&amp; (global.ap_potion &gt;0){
        global.player_combat_text = 3;
        //global.ap += global.player_combat_text;
        global.ap_potion -=1;
        global.use_ap_potion = true;
        instance_create(300, 400, ap_up);
        //instance_create(0,0,Battle_Messages);
        item_menu = 0;
        global.player_turn = false;
        instance_destroy();
        }    
    
    if keyboard_check_pressed (vk_left) || keyboard_check_pressed (vk_escape){
        item_menu = 0;
        action_menu = 1;
        }
}

//Item Menu Destroy
if item_menu = 0{
    with battle_items{
        instance_destroy()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
