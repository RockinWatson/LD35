<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-50</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (turn_order){
    instance_destroy();
}

with (enemy_message){
    instance_destroy();
}

with (Battle_Messages){
    instance_destroy();
}

end_message = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists (battle_eagle){
    if keyboard_check_released (vk_space){
        room_goto(rm_ow_eagle);
    }
}
if instance_exists (battle_deer){
    if keyboard_check_released (vk_space){
        room_goto(J_TestRoom);
    }
}

if instance_exists (battle_bass){
    if keyboard_check_released (vk_space){
        room_goto(rm_ow_bass);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.hp_notify = true{
    //draw_sprite(s_hp_pickup, 0, 640, 300);
    draw_text_colour(480, 200, "You got an HP Potion!", c_blue, c_blue, c_blue, c_blue, 1);
}
if global.ap_notify = true{
    draw_text_colour(480, 200, "You got an AP Potion!", c_blue, c_blue, c_blue, c_blue, 1);
    //draw_sprite(s_ap_pickup, 0, 640, 300);
}
if global.hp_ap_notify = true{
    draw_text_colour(480, 200, "You got an AP Potion!", c_blue, c_blue, c_blue, c_blue, 1);
    draw_text_colour(480, 275, "You got an HP Potion!", c_blue, c_blue, c_blue, c_blue, 1);
   //draw_sprite(s_hp_pickup, 0, 640, 300);
    //draw_sprite(s_ap_pickup, 0, 640, 375);
}

/*if end_message == true {
    draw_text_colour(640, 650, "Press ", c_red, c_red, c_orange, c_orange, 1);
}
*/

draw_text_colour (435, 680, "Press SPACE To Continue", c_black, c_black, c_black, c_black, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
